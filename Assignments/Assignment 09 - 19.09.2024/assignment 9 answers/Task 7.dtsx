<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/29/2024 10:16:14 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DA4E51DB31425CB"
  DTS:CreatorName="DA4E51DB31425CB\Administrator"
  DTS:DTSID="{36AC20CE-FB1E-4092-BDD6-849C72C0AFD4}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="16393"
  DTS:ObjectName="Task 7"
  DTS:PackageType="5"
  DTS:VersionBuild="18"
  DTS:VersionGUID="{C845E8B8-4B6C-45EA-980D-B63ECCCF4B80}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C441D16E-0279-492E-8832-F66D500A8482}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Server=05fc03d7092157b;Database=SSIS;Integrated Security=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{735639F8-D1DB-41F6-BDB5-6F8883BA9445}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\Administrator\Downloads\sales_data_sample.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{D9233407-EE8D-46E1-A425-901748494877}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6a4faddaa9374e1ba866c9e413dd6719"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ConnectionString,User::FilePath">
          <ProjectItem
            Name="ST_6a4faddaa9374e1ba866c9e413dd6719.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9F9F1250-A6F4-41BD-A793-6F5B7F4DE5E0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6a4faddaa9374e1ba866c9e413dd6719</RootNamespace>
    <AssemblyName>ST_6a4faddaa9374e1ba866c9e413dd6719</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a4faddaa9374e1ba866c9e413dd6719.Properties.Settings.get_Default():ST_6a4faddaa9374e1ba866c9e413dd6719.Properties.Sett" +
    "ings")]

namespace ST_6a4faddaa9374e1ba866c9e413dd6719.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
#endregion

namespace ST_6a4faddaa9374e1ba866c9e413dd6719
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string filePath = Dts.Variables["User::FilePath"].Value.ToString();
            string connectionString = Dts.Variables["User::ConnectionString"].Value.ToString();

            try
            {
                // Create a DataTable to hold CSV data
                DataTable dataTable = new DataTable();
                dataTable.Columns.Add("ORDERNUMBER", typeof(int));
                dataTable.Columns.Add("QUANTITYORDERED", typeof(int));
                dataTable.Columns.Add("PRICEEACH", typeof(decimal));
                dataTable.Columns.Add("ORDERLINENUMBER", typeof(int));
                dataTable.Columns.Add("SALES", typeof(decimal));
                dataTable.Columns.Add("ORDERDATE", typeof(string));
                dataTable.Columns.Add("STATUS", typeof(string));
                dataTable.Columns.Add("QTR_ID", typeof(int));
                dataTable.Columns.Add("MONTH_ID", typeof(int));
                dataTable.Columns.Add("YEAR_ID", typeof(int));
                dataTable.Columns.Add("PRODUCTLINE", typeof(string));
                dataTable.Columns.Add("MSRP", typeof(decimal));
                dataTable.Columns.Add("PRODUCTCODE", typeof(string));
                dataTable.Columns.Add("CUSTOMERNAME", typeof(string));
                dataTable.Columns.Add("PHONE", typeof(string));
                dataTable.Columns.Add("ADDRESSLINE1", typeof(string));
                dataTable.Columns.Add("ADDRESSLINE2", typeof(string));
                dataTable.Columns.Add("CITY", typeof(string));
                dataTable.Columns.Add("STATE", typeof(string));
                dataTable.Columns.Add("POSTALCODE", typeof(string));
                dataTable.Columns.Add("COUNTRY", typeof(string));
                dataTable.Columns.Add("TERRITORY", typeof(string));
                dataTable.Columns.Add("CONTACTLASTNAME", typeof(string));
                dataTable.Columns.Add("CONTACTFIRSTNAME", typeof(string));
                dataTable.Columns.Add("DEALSIZE", typeof(string));

                // Read data from the CSV file
                using (var reader = new StreamReader(filePath))
                {
                    string headerLine = reader.ReadLine(); // Skip header
                    while (!reader.EndOfStream)
                    {
                        var line = reader.ReadLine();
                        var values = line.Split(',');

                        // Ensure there are enough columns
                        if (values.Length < 24) continue; // Adjust if necessary

                        // Create a new row and populate it
                        DataRow row = dataTable.NewRow();
                        row["ORDERNUMBER"] = int.Parse(values[0]);
                        row["QUANTITYORDERED"] = int.Parse(values[1]);
                        row["PRICEEACH"] = decimal.Parse(values[2]);
                        row["ORDERLINENUMBER"] = int.Parse(values[3]);
                        row["SALES"] = decimal.Parse(values[4]);
                        row["ORDERDATE"] = values[5];
                        row["STATUS"] = values[6];
                        row["QTR_ID"] = int.Parse(values[7]);
                        row["MONTH_ID"] = int.Parse(values[8]);
                        row["YEAR_ID"] = int.Parse(values[9]);
                        row["PRODUCTLINE"] = values[10];
                        row["MSRP"] = decimal.Parse(values[11]);
                        row["PRODUCTCODE"] = values[12];
                        row["CUSTOMERNAME"] = values[13];
                        row["PHONE"] = values[14];
                        row["ADDRESSLINE1"] = values[15];
                        row["ADDRESSLINE2"] = values[16];
                        row["CITY"] = values[17];
                        row["STATE"] = values[18];
                        row["POSTALCODE"] = values[19];
                        row["COUNTRY"] = values[20];
                        row["TERRITORY"] = values[21];
                        row["CONTACTLASTNAME"] = values[22];
                        row["CONTACTFIRSTNAME"] = values[23];
                        row["DEALSIZE"] = values[24];
                        dataTable.Rows.Add(row);
                    }
                }

                // Insert data into SQL Server
                using (SqlConnection conn = new SqlConnection(connectionString))
                {
                    conn.Open();
                    foreach (DataRow row in dataTable.Rows)
                    {
                        using (SqlCommand cmd = new SqlCommand("INSERT INTO CustomTable (ORDERNUMBER, QUANTITYORDERED, PRICEEACH, ORDERLINENUMBER, SALES, ORDERDATE, STATUS, QTR_ID, MONTH_ID, YEAR_ID, PRODUCTLINE, MSRP, PRODUCTCODE, CUSTOMERNAME, PHONE, ADDRESSLINE1, ADDRESSLINE2, CITY, STATE, POSTALCODE, COUNTRY, TERRITORY, CONTACTLASTNAME, CONTACTFIRSTNAME, DEALSIZE) VALUES (@ORDERNUMBER, @QUANTITYORDERED, @PRICEEACH, @ORDERLINENUMBER, @SALES, @ORDERDATE, @STATUS, @QTR_ID, @MONTH_ID, @YEAR_ID, @PRODUCTLINE, @MSRP, @PRODUCTCODE, @CUSTOMERNAME, @PHONE, @ADDRESSLINE1, @ADDRESSLINE2, @CITY, @STATE, @POSTALCODE, @COUNTRY, @TERRITORY, @CONTACTLASTNAME, @CONTACTFIRSTNAME, @DEALSIZE)", conn))
                        {
                            cmd.Parameters.AddWithValue("@ORDERNUMBER", row["ORDERNUMBER"]);
                            cmd.Parameters.AddWithValue("@QUANTITYORDERED", row["QUANTITYORDERED"]);
                            cmd.Parameters.AddWithValue("@PRICEEACH", row["PRICEEACH"]);
                            cmd.Parameters.AddWithValue("@ORDERLINENUMBER", row["ORDERLINENUMBER"]);
                            cmd.Parameters.AddWithValue("@SALES", row["SALES"]);
                            cmd.Parameters.AddWithValue("@ORDERDATE", row["ORDERDATE"]);
                            cmd.Parameters.AddWithValue("@STATUS", row["STATUS"]);
                            cmd.Parameters.AddWithValue("@QTR_ID", row["QTR_ID"]);
                            cmd.Parameters.AddWithValue("@MONTH_ID", row["MONTH_ID"]);
                            cmd.Parameters.AddWithValue("@YEAR_ID", row["YEAR_ID"]);
                            cmd.Parameters.AddWithValue("@PRODUCTLINE", row["PRODUCTLINE"]);
                            cmd.Parameters.AddWithValue("@MSRP", row["MSRP"]);
                            cmd.Parameters.AddWithValue("@PRODUCTCODE", row["PRODUCTCODE"]);
                            cmd.Parameters.AddWithValue("@CUSTOMERNAME", row["CUSTOMERNAME"]);
                            cmd.Parameters.AddWithValue("@PHONE", row["PHONE"]);
                            cmd.Parameters.AddWithValue("@ADDRESSLINE1", row["ADDRESSLINE1"]);
                            cmd.Parameters.AddWithValue("@ADDRESSLINE2", row["ADDRESSLINE2"]);
                            cmd.Parameters.AddWithValue("@CITY", row["CITY"]);
                            cmd.Parameters.AddWithValue("@STATE", row["STATE"]);
                            cmd.Parameters.AddWithValue("@POSTALCODE", row["POSTALCODE"]);
                            cmd.Parameters.AddWithValue("@COUNTRY", row["COUNTRY"]);
                            cmd.Parameters.AddWithValue("@TERRITORY", row["TERRITORY"]);
                            cmd.Parameters.AddWithValue("@CONTACTLASTNAME", row["CONTACTLASTNAME"]);
                            cmd.Parameters.AddWithValue("@CONTACTFIRSTNAME", row["CONTACTFIRSTNAME"]);
                            cmd.Parameters.AddWithValue("@DEALSIZE", row["DEALSIZE"]);
                            cmd.ExecuteNonQuery();
                        }
                    }
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task", ex.Message, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }
    }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6a4faddaa9374e1ba866c9e413dd6719</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6a4faddaa9374e1ba866c9e413dd6719</msb:DisplayName>
    <msb:ProjectId>{C7332F21-F970-4F3B-9A3F-AFD9F2A24C20}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6a4faddaa9374e1ba866c9e413dd6719.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6a4faddaa9374e1ba866c9e413dd6719")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6a4faddaa9374e1ba866c9e413dd6719")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a4faddaa9374e1ba866c9e413dd6719.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a4faddaa9374e1ba866c9e413dd6719.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a4faddaa9374e1ba866c9e413dd6719.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6a4faddaa9374e1ba866c9e413dd6719.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6a4faddaa9374e1ba866c9e413dd6719.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6a4faddaa9374e1ba866c9e413dd6719.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEhP+2YAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAAKkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANhDAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAMCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAM
RAAAAAAAAEgAAAACAAUAPCoAAOQYAAABAAAAAAAAACBDAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgD6CAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACgtzFQAACgwIbxYAAApyTQAA
cNAkAAABKBcAAApvGAAACiYIbxYAAApyZQAAcNAkAAABKBcAAApvGAAACiYIbxYAAApyhQAAcNAo
AAABKBcAAApvGAAACiYIbxYAAApymQAAcNAkAAABKBcAAApvGAAACiYIbxYAAApyuQAAcNAoAAAB
KBcAAApvGAAACiYIbxYAAApyxQAAcNApAAABKBcAAApvGAAACiYIbxYAAApy2QAAcNApAAABKBcA
AApvGAAACiYIbxYAAApy5wAAcNAkAAABKBcAAApvGAAACiYIbxYAAApy9QAAcNAkAAABKBcAAApv
GAAACiYIbxYAAApyBwEAcNAkAAABKBcAAApvGAAACiYIbxYAAApyFwEAcNApAAABKBcAAApvGAAA
CiYIbxYAAApyLwEAcNAoAAABKBcAAApvGAAACiYIbxYAAApyOQEAcNApAAABKBcAAApvGAAACiYI
bxYAAApyUQEAcNApAAABKBcAAApvGAAACiYIbxYAAApyawEAcNApAAABKBcAAApvGAAACiYIbxYA
AApydwEAcNApAAABKBcAAApvGAAACiYIbxYAAApykQEAcNApAAABKBcAAApvGAAACiYIbxYAAApy
qwEAcNApAAABKBcAAApvGAAACiYIbxYAAApytQEAcNApAAABKBcAAApvGAAACiYIbxYAAApywQEA
cNApAAABKBcAAApvGAAACiYIbxYAAApy1wEAcNApAAABKBcAAApvGAAACiYIbxYAAApy5wEAcNAp
AAABKBcAAApvGAAACiYIbxYAAApy+wEAcNApAAABKBcAAApvGAAACiYIbxYAAApyGwIAcNApAAAB
KBcAAApvGAAACiYIbxYAAApyPQIAcNApAAABKBcAAApvGAAACiYGcxkAAAoNCW8aAAAKJjgyAgAA
CW8aAAAKF40rAAABJRYfLJ1vGwAAChMEEQSOaR8YPw8CAAAIbxwAAAoTBREFck0AAHARBBaaKB0A
AAqMJAAAAW8eAAAKEQVyZQAAcBEEF5ooHQAACowkAAABbx4AAAoRBXKFAABwEQQYmigfAAAKjCgA
AAFvHgAAChEFcpkAAHARBBmaKB0AAAqMJAAAAW8eAAAKEQVyuQAAcBEEGpooHwAACowoAAABbx4A
AAoRBXLFAABwEQQbmm8eAAAKEQVy2QAAcBEEHJpvHgAAChEFcucAAHARBB2aKB0AAAqMJAAAAW8e
AAAKEQVy9QAAcBEEHpooHQAACowkAAABbx4AAAoRBXIHAQBwEQQfCZooHQAACowkAAABbx4AAAoR
BXIXAQBwEQQfCppvHgAAChEFci8BAHARBB8LmigfAAAKjCgAAAFvHgAAChEFcjkBAHARBB8Mmm8e
AAAKEQVyUQEAcBEEHw2abx4AAAoRBXJrAQBwEQQfDppvHgAAChEFcncBAHARBB8Pmm8eAAAKEQVy
kQEAcBEEHxCabx4AAAoRBXKrAQBwEQQfEZpvHgAAChEFcrUBAHARBB8Smm8eAAAKEQVywQEAcBEE
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
KwAAAAAAAQABAAEAEAB6BAcAOQABAAEAAAEAAOsGBwBdAAEAAwAAABAACwZnBmUABAADAAABEACk
BmcGeQAGAAcABgZdAPUAVoDbBvgAVoAgAfgAEQBpBPwAEQBAAQABEQCTAAQBUCAAAAAAhgCABAYA
AQDUKQAAAACGGMQFBgABANwpAAAAAIMYxAUGAAEA5CkAAAAAkwhrBQgBAQAQKgAAAACTCCgBDQEB
ABcqAAAAAJMINAESAQEAHyoAAAAAlggaBxgBAgAmKgAAAACGGMQFBgACAC4qAAAAAJEYygUdAQIA
AAABAHIDCQDEBQEAEQDEBQYAGQDEBQoAKQDEBRAAMQDEBRAAOQDEBRAAQQDEBRAASQDEBRAAUQDE
BRAAWQDEBRAAYQDEBRAAaQDEBQYAwQDEBQYA6QDEBRUA+QDEBQYAcQDjBjQAAQGWBjoACQFLBEAA
EQFbA0cAyQCSA0sAeQDEBQYAeQCtBk8AKQHgAFUAGQF6AF4AgQDEBRAAUQESAUsASQEUB2gAeQBo
B28AIQGnAXQAiQBUBHkAQQGnAX8AeQAEB4YAYQF6AIwAgQA7BJIAqQCfAQYAkQDEBRAAaQF1BAYA
cQG2BZYAmQBLB0cAoQDEBZsAoQDMBqIAiQBLBKgAeQFlA60AiQF8B7UAmQBXB5IAAQEmBwEAAQH5
BrkAsQCjAEsASQGMB78AkQGgBcIAcQDEBQYAyQDEBQYAKQFvB8sA0QDEBdEA8QDEBQYACAAIAOsA
CAAMAPAAKQBzAFgBLgALADABLgATADkBLgAbAFgBLgAjAGEBLgArAIoBLgAzAIoBLgA7AIoBLgBD
AGEBLgBLAJABLgBTAIoBLgBbAKcBQwBjAPAASQBzAFgBgwBrAPAAwQB7APAAGwAEAAEABQADAAAA
bwUhAQAASAEmAQAAHgcrAQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAUCOQMAAAAAAA
AAcAAAAEAAAAAAAAAAAAAADZAHEAAAAAABAAAAAAAAAAAAAAAOIAmwMAAAAABAAAAAAAAAAAAAAA
2QBlAAAAAAAEAAAAAAAAAAAAAADZAF0EAAAAABAAAAAAAAAAAAAAAOIAPgAAAAAAAAAAAAEAAAAV
BgAAAAAASW50MzIAU1RfNmE0ZmFkZGFhOTM3NGUxYmE4NjZjOWU0MTNkZDY3MTkAPE1vZHVsZT4A
U3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5E
YXRhAG1zY29ybGliAEFkZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0
X01lc3NhZ2UARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAUmVhZExp
bmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAZ2V0X1ZhbHVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAERlY2ltYWwAU2NyaXB0T2JqZWN0TW9kZWwA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzZhNGZhZGRhYTkzNzRlMWJhODY2YzllNDEzZGQ2NzE5
LmRsbABnZXRfRW5kT2ZTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3Vy
Y2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24A
U3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3Fs
Q29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAENoYXIA
U3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBFdmVudHNPYmplY3RX
cmFwcGVyAFNxbFBhcmFtZXRlcgBGaXJlRXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAu
Y3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF82YTRmYWRkYWE5Mzc0ZTFiYTg2NmM5ZTQxM2RkNjcx
OS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNmE0ZmFk
ZGFhOTM3NGUxYmE4NjZjOWU0MTNkZDY3MTkuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRp
bmdzAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAGdldF9Sb3dzAE9iamVjdABTcGxpdABn
ZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJl
bnQATW92ZU5leHQARGF0YVJvdwBOZXdSb3cAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBF
bXB0eQAAAAAdVQBzAGUAcgA6ADoARgBpAGwAZQBQAGEAdABoAAAtVQBzAGUAcgA6ADoAQwBvAG4A
bgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAF08AUgBEAEUAUgBOAFUATQBCAEUAUgAAH1EAVQBB
AE4AVABJAFQAWQBPAFIARABFAFIARQBEAAATUABSAEkAQwBFAEUAQQBDAEgAAB9PAFIARABFAFIA
TABJAE4ARQBOAFUATQBCAEUAUgAAC1MAQQBMAEUAUwAAE08AUgBEAEUAUgBEAEEAVABFAAANUwBU
AEEAVABVAFMAAA1RAFQAUgBfAEkARAAAEU0ATwBOAFQASABfAEkARAAAD1kARQBBAFIAXwBJAEQA
ABdQAFIATwBEAFUAQwBUAEwASQBOAEUAAAlNAFMAUgBQAAAXUABSAE8ARABVAEMAVABDAE8ARABF
AAAZQwBVAFMAVABPAE0ARQBSAE4AQQBNAEUAAAtQAEgATwBOAEUAABlBAEQARABSAEUAUwBTAEwA
SQBOAEUAMQAAGUEARABEAFIARQBTAFMATABJAE4ARQAyAAAJQwBJAFQAWQAAC1MAVABBAFQARQAA
FVAATwBTAFQAQQBMAEMATwBEAEUAAA9DAE8AVQBOAFQAUgBZAAATVABFAFIAUgBJAFQATwBSAFkA
AB9DAE8ATgBUAEEAQwBUAEwAQQBTAFQATgBBAE0ARQAAIUMATwBOAFQAQQBDAFQARgBJAFIAUwBU
AE4AQQBNAEUAABFEAEUAQQBMAFMASQBaAEUAAITbSQBOAFMARQBSAFQAIABJAE4AVABPACAAQwB1
AHMAdABvAG0AVABhAGIAbABlACAAKABPAFIARABFAFIATgBVAE0AQgBFAFIALAAgAFEAVQBBAE4A
VABJAFQAWQBPAFIARABFAFIARQBEACwAIABQAFIASQBDAEUARQBBAEMASAAsACAATwBSAEQARQBS
AEwASQBOAEUATgBVAE0AQgBFAFIALAAgAFMAQQBMAEUAUwAsACAATwBSAEQARQBSAEQAQQBUAEUA
LAAgAFMAVABBAFQAVQBTACwAIABRAFQAUgBfAEkARAAsACAATQBPAE4AVABIAF8ASQBEACwAIABZ
AEUAQQBSAF8ASQBEACwAIABQAFIATwBEAFUAQwBUAEwASQBOAEUALAAgAE0AUwBSAFAALAAgAFAA
UgBPAEQAVQBDAFQAQwBPAEQARQAsACAAQwBVAFMAVABPAE0ARQBSAE4AQQBNAEUALAAgAFAASABP
AE4ARQAsACAAQQBEAEQAUgBFAFMAUwBMAEkATgBFADEALAAgAEEARABEAFIARQBTAFMATABJAE4A
RQAyACwAIABDAEkAVABZACwAIABTAFQAQQBUAEUALAAgAFAATwBTAFQAQQBMAEMATwBEAEUALAAg
AEMATwBVAE4AVABSAFkALAAgAFQARQBSAFIASQBUAE8AUgBZACwAIABDAE8ATgBUAEEAQwBUAEwA
QQBTAFQATgBBAE0ARQAsACAAQwBPAE4AVABBAEMAVABGAEkAUgBTAFQATgBBAE0ARQAsACAARABF
AEEATABTAEkAWgBFACkAIABWAEEATABVAEUAUwAgACgAQABPAFIARABFAFIATgBVAE0AQgBFAFIA
LAAgAEAAUQBVAEEATgBUAEkAVABZAE8AUgBEAEUAUgBFAEQALAAgAEAAUABSAEkAQwBFAEUAQQBD
AEgALAAgAEAATwBSAEQARQBSAEwASQBOAEUATgBVAE0AQgBFAFIALAAgAEAAUwBBAEwARQBTACwA
IABAAE8AUgBEAEUAUgBEAEEAVABFACwAIABAAFMAVABBAFQAVQBTACwAIABAAFEAVABSAF8ASQBE
ACwAIABAAE0ATwBOAFQASABfAEkARAAsACAAQABZAEUAQQBSAF8ASQBEACwAIABAAFAAUgBPAEQA
VQBDAFQATABJAE4ARQAsACAAQABNAFMAUgBQACwAIABAAFAAUgBPAEQAVQBDAFQAQwBPAEQARQAs
ACAAQABDAFUAUwBUAE8ATQBFAFIATgBBAE0ARQAsACAAQABQAEgATwBOAEUALAAgAEAAQQBEAEQA
UgBFAFMAUwBMAEkATgBFADEALAAgAEAAQQBEAEQAUgBFAFMAUwBMAEkATgBFADIALAAgAEAAQwBJ
AFQAWQAsACAAQABTAFQAQQBUAEUALAAgAEAAUABPAFMAVABBAEwAQwBPAEQARQAsACAAQABDAE8A
VQBOAFQAUgBZACwAIABAAFQARQBSAFIASQBUAE8AUgBZACwAIABAAEMATwBOAFQAQQBDAFQATABB
AFMAVABOAEEATQBFACwAIABAAEMATwBOAFQAQQBDAFQARgBJAFIAUwBUAE4AQQBNAEUALAAgAEAA
RABFAEEATABTAEkAWgBFACkAABlAAE8AUgBEAEUAUgBOAFUATQBCAEUAUgAAIUAAUQBVAEEATgBU
AEkAVABZAE8AUgBEAEUAUgBFAEQAABVAAFAAUgBJAEMARQBFAEEAQwBIAAAhQABPAFIARABFAFIA
TABJAE4ARQBOAFUATQBCAEUAUgAADUAAUwBBAEwARQBTAAAVQABPAFIARABFAFIARABBAFQARQAA
D0AAUwBUAEEAVABVAFMAAA9AAFEAVABSAF8ASQBEAAATQABNAE8ATgBUAEgAXwBJAEQAABFAAFkA
RQBBAFIAXwBJAEQAABlAAFAAUgBPAEQAVQBDAFQATABJAE4ARQAAC0AATQBTAFIAUAAAGUAAUABS
AE8ARABVAEMAVABDAE8ARABFAAAbQABDAFUAUwBUAE8ATQBFAFIATgBBAE0ARQAADUAAUABIAE8A
TgBFAAAbQABBAEQARABSAEUAUwBTAEwASQBOAEUAMQAAG0AAQQBEAEQAUgBFAFMAUwBMAEkATgBF
ADIAAAtAAEMASQBUAFkAAA1AAFMAVABBAFQARQAAF0AAUABPAFMAVABBAEwAQwBPAEQARQAAEUAA
QwBPAFUATgBUAFIAWQAAFUAAVABFAFIAUgBJAFQATwBSAFkAACFAAEMATwBOAFQAQQBDAFQATABB
AFMAVABOAEEATQBFAAAjQABDAE8ATgBUAEEAQwBUAEYASQBSAFMAVABOAEEATQBFAAATQABEAEUA
QQBMAFMASQBaAEUAABdTAGMAcgBpAHAAdAAgAFQAYQBzAGsAAHFTAFQAXwA2AGEANABmAGEAZABk
AGEAYQA5ADMANwA0AGUAMQBiAGEAOAA2ADYAYwA5AGUANAAxADMAZABkADYANwAxADkALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAih6tPAQaSk21u9IvmuVIZAAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcRgHDA4OEj0SQR0OEkUSSRJNEkUSURJVElkFIAASgIEF
IAASgIUGIAESgIkcAyAAHAMgAA4FIAASgI0IAAESgJURgJkJIAISgJ0OEoCVBiABHQ4dAwQgABJF
BAABCA4FIAIBDhwGAAERgKEOBSAAEoCxBSABARJFAyAAAgQgABJNBiACAQ4SSQUgABKAvQQgARwO
ByACEoDBDhwDIAAIBSAAEoDJAgYOCCAFAggODg4IBSAAEoDNByACAQ4SgM0It3pcVhk04IkIiYRd
zYCAzJEEAAAAAAQBAAAAAgYIAwYRDAMGEmkDBhJtAwYSFAQAABJpBAAAEm0FAAEBEm0EAAASFAMA
AAEECAASaQQIABJtBAgAEhQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzZhNGZhZGRhYTkzNzRlMWJhODY2YzllNDEzZGQ2NzE5AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAABE
AAAAAAAAAAAAABpEAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAa
BAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAkDBQIwAAAQCQMFAjPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
egMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA2
AGEANABmAGEAZABkAGEAYQA5ADMANwA0AGUAMQBiAGEAOAA2ADYAYwA5AGUANAAxADMAZABkADYA
NwAxADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAwADQAMAAu
ADEAMgA0ADMAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2AGEA
NABmAGEAZABkAGEAYQA5ADMANwA0AGUAMQBiAGEAOAA2ADYAYwA5AGUANAAxADMAZABkADYANwAx
ADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADYAYQA0AGYAYQBkAGQAYQBhADkAMwA3ADQAZQAxAGIAYQA4ADYANgBjADkAZQA0ADEAMwBk
AGQANgA3ADEAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwA2AGEANABmAGEAZABkAGEAYQA5ADMANwA0AGUAMQBiAGEAOAA2ADYAYwA5AGUANAAxADMAZABk
ADYANwAxADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkA
MAA0ADAALgAxADIANAAzADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADkAMAA0ADAALgAxADIANAAzADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAALDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="305,148" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>